from celery import shared_task
from django.utils import timezone
from collections import defaultdict

from .models import Habit
from .services import send_telegram_message
import logging

logger = logging.getLogger(__name__)

@shared_task
def send_daily_habit_reminders():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    """
    try:
        today = timezone.now().date()
        weekday = timezone.now().isoweekday()  # 1-7 (–ø–Ω-–≤—Å)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è
        habits = Habit.objects.filter(
            periodicity__gte=weekday  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å
        ).select_related('user')

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        user_habits = defaultdict(list)
        for habit in habits:
            if habit.user.chat_id:
                user_habits[habit.user].append(habit)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        for user, habits in user_habits.items():
            if not user.chat_id:
                continue

            message = "üìÖ *–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*\n\n"
            for habit in sorted(habits, key=lambda h: h.time):
                message += (
                    f"‚è∞ *{habit.time.strftime('%H:%M')}* - {habit.action}\n"
                    f"   üè† {habit.place}\n\n"
                )

            try:
                send_telegram_message(user.chat_id, message)
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è {user.email}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è {user.email}: {str(e)}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ send_daily_habit_reminders: {str(e)}")

# @shared_task
# def send_habit_reminders():
#     """
#     –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
#     —Å —É—á–µ—Ç–æ–º –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
#     """
#     try:
#         now = timezone.now()
#         current_time = now.time()
#         current_weekday = now.isoweekday()  # 1-7 (–ø–Ω-–≤—Å)
#
#         # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–µ–π—á–∞—Å
#         habits = Habit.objects.filter(
#             time__hour=current_time.hour,
#             time__minute=current_time.minute
#         )
#
#         for habit in habits:
#             # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ 1 - –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, 7 - —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)
#             if habit.periodicity == 1 or habit.periodicity >= current_weekday:
#                 if not habit.user.chat_id:
#                     logger.warning(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {habit.user} –Ω–µ —É–∫–∞–∑–∞–Ω chat_id")
#                     continue
#
#                 message = (
#                     f"‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:* {habit.action}\n"
#                     f"üïí *–í—Ä–µ–º—è:* {habit.time.strftime('%H:%M')}\n"
#                     f"üè† *–ú–µ—Å—Ç–æ:* {habit.place}"
#                 )
#
#                 try:
#                     send_telegram_message(habit.user.chat_id, message)
#                     logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è {habit.user}: {habit.action}")
#                 except Exception as e:
#                     logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
#
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ send_habit_reminders: {str(e)}")